// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             (unknown)
// source: promotion/admin.proto

package promotion

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	PromotionAdmin_DefineCampaign_FullMethodName       = "/promotion.admin.PromotionAdmin/DefineCampaign"
	PromotionAdmin_DefineVoucher_FullMethodName        = "/promotion.admin.PromotionAdmin/DefineVoucher"
	PromotionAdmin_SetVoucherToCampaign_FullMethodName = "/promotion.admin.PromotionAdmin/SetVoucherToCampaign"
)

// PromotionAdminClient is the client API for PromotionAdmin service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type PromotionAdminClient interface {
	DefineCampaign(ctx context.Context, in *DefineCampaignRequest, opts ...grpc.CallOption) (*DefineCampaignReply, error)
	DefineVoucher(ctx context.Context, in *DefineVoucherRequest, opts ...grpc.CallOption) (*DefineVoucherReply, error)
	SetVoucherToCampaign(ctx context.Context, in *SetVoucherToCampaignRequest, opts ...grpc.CallOption) (*SetVoucherToCampaignReply, error)
}

type promotionAdminClient struct {
	cc grpc.ClientConnInterface
}

func NewPromotionAdminClient(cc grpc.ClientConnInterface) PromotionAdminClient {
	return &promotionAdminClient{cc}
}

func (c *promotionAdminClient) DefineCampaign(ctx context.Context, in *DefineCampaignRequest, opts ...grpc.CallOption) (*DefineCampaignReply, error) {
	out := new(DefineCampaignReply)
	err := c.cc.Invoke(ctx, PromotionAdmin_DefineCampaign_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *promotionAdminClient) DefineVoucher(ctx context.Context, in *DefineVoucherRequest, opts ...grpc.CallOption) (*DefineVoucherReply, error) {
	out := new(DefineVoucherReply)
	err := c.cc.Invoke(ctx, PromotionAdmin_DefineVoucher_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *promotionAdminClient) SetVoucherToCampaign(ctx context.Context, in *SetVoucherToCampaignRequest, opts ...grpc.CallOption) (*SetVoucherToCampaignReply, error) {
	out := new(SetVoucherToCampaignReply)
	err := c.cc.Invoke(ctx, PromotionAdmin_SetVoucherToCampaign_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PromotionAdminServer is the server API for PromotionAdmin service.
// All implementations must embed UnimplementedPromotionAdminServer
// for forward compatibility
type PromotionAdminServer interface {
	DefineCampaign(context.Context, *DefineCampaignRequest) (*DefineCampaignReply, error)
	DefineVoucher(context.Context, *DefineVoucherRequest) (*DefineVoucherReply, error)
	SetVoucherToCampaign(context.Context, *SetVoucherToCampaignRequest) (*SetVoucherToCampaignReply, error)
	mustEmbedUnimplementedPromotionAdminServer()
}

// UnimplementedPromotionAdminServer must be embedded to have forward compatible implementations.
type UnimplementedPromotionAdminServer struct {
}

func (UnimplementedPromotionAdminServer) DefineCampaign(context.Context, *DefineCampaignRequest) (*DefineCampaignReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DefineCampaign not implemented")
}
func (UnimplementedPromotionAdminServer) DefineVoucher(context.Context, *DefineVoucherRequest) (*DefineVoucherReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DefineVoucher not implemented")
}
func (UnimplementedPromotionAdminServer) SetVoucherToCampaign(context.Context, *SetVoucherToCampaignRequest) (*SetVoucherToCampaignReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetVoucherToCampaign not implemented")
}
func (UnimplementedPromotionAdminServer) mustEmbedUnimplementedPromotionAdminServer() {}

// UnsafePromotionAdminServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PromotionAdminServer will
// result in compilation errors.
type UnsafePromotionAdminServer interface {
	mustEmbedUnimplementedPromotionAdminServer()
}

func RegisterPromotionAdminServer(s grpc.ServiceRegistrar, srv PromotionAdminServer) {
	s.RegisterService(&PromotionAdmin_ServiceDesc, srv)
}

func _PromotionAdmin_DefineCampaign_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DefineCampaignRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PromotionAdminServer).DefineCampaign(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PromotionAdmin_DefineCampaign_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PromotionAdminServer).DefineCampaign(ctx, req.(*DefineCampaignRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PromotionAdmin_DefineVoucher_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DefineVoucherRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PromotionAdminServer).DefineVoucher(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PromotionAdmin_DefineVoucher_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PromotionAdminServer).DefineVoucher(ctx, req.(*DefineVoucherRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PromotionAdmin_SetVoucherToCampaign_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetVoucherToCampaignRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PromotionAdminServer).SetVoucherToCampaign(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PromotionAdmin_SetVoucherToCampaign_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PromotionAdminServer).SetVoucherToCampaign(ctx, req.(*SetVoucherToCampaignRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// PromotionAdmin_ServiceDesc is the grpc.ServiceDesc for PromotionAdmin service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var PromotionAdmin_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "promotion.admin.PromotionAdmin",
	HandlerType: (*PromotionAdminServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DefineCampaign",
			Handler:    _PromotionAdmin_DefineCampaign_Handler,
		},
		{
			MethodName: "DefineVoucher",
			Handler:    _PromotionAdmin_DefineVoucher_Handler,
		},
		{
			MethodName: "SetVoucherToCampaign",
			Handler:    _PromotionAdmin_SetVoucherToCampaign_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "promotion/admin.proto",
}
